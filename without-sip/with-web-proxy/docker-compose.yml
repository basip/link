version: "3.2"
services:
  https-portal:
    image: steveltn/https-portal:1
    container_name: link-web-proxy
    ports:
      - "80:80"
      - "443:443"
    restart: always
    environment:
      STAGE: $HTTPS_MODE
      PROXY_READ_TIMEOUT: 3600
      DOMAINS: "$HTTPS_DOMAIN -> http://app:8000"
      CLIENT_MAX_BODY_SIZE: "500M"
      WEBSOCKET: "true"
      WORKER_PROCESSES: 4
      WORKER_CONNECTIONS: 8192
    volumes:
      - app-ssl-certs:/var/lib/https-portal
      - ./web.conf/default.conf.erb:/var/lib/nginx-conf/$HTTPS_DOMAIN.conf.erb
      - ./web.conf/default.ssl.conf.erb:/var/lib/nginx-conf/$HTTPS_DOMAIN.ssl.conf.erb
      - ./web.conf/nginx.conf.erb:/var/lib/nginx-conf/nginx.conf.erb
    networks:
      - default
      - link-internal
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
  autoheal:
    restart: always
    container_name: link-autoheal
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  app:
    image: basip/link-app:latest
    container_name: link-app
    restart: always
    ports:
      - "8000:8000/tcp"
      - "6001:6001/tcp"
    depends_on:
      - redis
      - broker
      - db
    networks:
      - link-internal
      - default
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    volumes:
      - app-storage:/share/storage
      - system-logs:/var/log
  redis:
    image: redis:6.2.4-alpine3.13
    container_name: link-redis
    restart: always
    ports:
      - "6379:6379/tcp"
    networks:
      - link-internal
    depends_on:
      - autoheal
    healthcheck:
      test: redis-cli -e PING || exit 1
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
  db:
    image: mysql:5.7.34
    container_name: link-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=Qwerty12345
      - MYSQL_DATABASE=basip_link
    volumes:
      - app-data:/var/lib/mysql
    ports:
      - "3306:3306/tcp"
    networks:
      - link-internal
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    command: ["--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci", "--innodb-buffer-pool-size=2G", "--innodb-log-file-size=256M"]
  face-app:
    image: basip/link-face-app:latest
    container_name: link-face-app
    restart: always
    ports:
      - "8089:80/tcp"
    networks:
      - link-internal
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
  broker:
    image: basip/link-broker:latest
    restart: always
    container_name: link-broker
    ports:
      - "61617:61617" #STOMP+SSL
      - "8161:8161"  #UI
      - "5672:5672"  #AMQP
      - "61613:61613" #STOMP
      - "1883:1883"  #MQTT
      - "61614:61614" #WS
      - "1884:1884"  #MQTT+SSL
    volumes:
      - broker-data:/opt/activemq/data
      - broker-app:/root/control-service/assets
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
networks:
  link-internal:
    internal: true

volumes:
  app-data: { external: true }
  system-logs: { external: true }
  app-storage: { external: true }
  app-ssl-certs: { external: true }
  broker-data: { external: true }
  broker-app: { }
