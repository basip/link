version: "3.2"
services:
  autoheal:
    restart: always
    container_name: link-autoheal
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  app:
    image: basip/link-app
    container_name: link-app
    restart: always
    ports:
      - "80:8000/tcp"
      - "6001:6001/tcp"
    depends_on:
      - redis
      - nats
      - db
    networks:
      - link-internal
      - default
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    volumes:
      - app-storage:/share/storage
      - system-logs:/var/log
  redis:
    image: redis:6.2.4-alpine3.13
    container_name: link-redis
    restart: always
    ports:
      - "6379:6379/tcp"
    networks:
      - link-internal
    depends_on:
      - autoheal
    healthcheck:
      test: redis-cli -e PING || exit 1
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
  nats:
    image: nats:2.2.6-alpine3.13
    container_name: link-nats
    restart: always
    ports:
      - "4222:4222/tcp"
      - "6222:6222/tcp"
      - "8222:8222/tcp"
    networks:
      - link-internal
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
  db:
    image: mysql:5.7.34
    container_name: link-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=Qwerty12345
      - MYSQL_DATABASE=basip_link
    volumes:
      - app-data:/var/lib/mysql
    ports:
      - "3306:3306/tcp"
    networks:
      - link-internal
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    command: ["--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci", "--innodb-buffer-pool-size=2G", "--innodb-log-file-size=256M"]
  face-app:
    image: basip/link-face-app:latest
    container_name: link-face-app
    restart: always
    ports:
      - "8089:80/tcp"
    networks:
      - link-internal
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
  sip-proxy:
    image: basip/link-sip-proxy
    container_name: sip-proxy-app
    network_mode: host
    depends_on:
      - sip-proxy-db
    environment:
      - LISTEN_PORT=48080
      - DB_USER=root
      - DB_PASSWORD=2TeEcbpdTXx2HrGVHgji3iqJ
      - DB_HOST=127.0.0.1
      - DB_PORT=43306
      - DB_NAME=kamailio
      - KAMAILIO_CONFIG_PATH=/usr/local/etc/kamailio
      - APP_ASSETS_PATH=/root/control-service/assets
      - ARI_CONFIG_PATH=/usr/local/etc/ari-service      
    volumes:
      - sip-proxy-app:/root/control-service/assets
      - sip-proxy-log:/var/log
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
  sip-node:
    image: basip/link-sip-node
    container_name: sip-node-app
    network_mode: host
    restart: always
    environment:
      - LISTEN_PORT=48081
      - ASTERISK_CONFIG_PATH=/etc/asterisk
      - APP_ASSETS_PATH=/root/control-service/assets
    volumes:
      - sip-node-app:/root/control-service/assets
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
  sip-proxy-db:
    image: mysql:5.7.34
    container_name: sip-proxy-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=2TeEcbpdTXx2HrGVHgji3iqJ
      - MYSQL_DATABASE=kamailio
    volumes:
      - sip-proxy-data:/var/lib/mysql
    ports:
      - "43306:3306/tcp"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    command: ["--innodb-buffer-pool-size=2G", "--innodb-log-file-size=256M"]
networks:
  link-internal:
    internal: true

volumes:
  app-data: { external: true }
  system-logs: { external: true }
  app-storage: { external: true }
  sip-proxy-data: {}
  sip-node-app: {}
  sip-proxy-app: {}
  sip-proxy-log: {}
